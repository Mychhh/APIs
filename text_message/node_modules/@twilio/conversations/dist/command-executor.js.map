{"version":3,"file":"command-executor.js","sources":["../src/command-executor.ts"],"sourcesContent":["import { TransportResult as Result, Transport } from \"twilsock\";\nimport { MutationConflictResponse } from \"./interfaces/commands/mutation-conflict\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { AsyncRetrier } from \"@twilio/operation-retrier\";\n\nexport interface CommandExecutorServices {\n  transport: Transport;\n}\n\nconst trimSlashes = (url: string): string => url.replace(/(^\\/+|\\/+$)/g, \"\");\n\nconst isMutationConflictResponse = (\n  response: Result<unknown>\n): response is Result<MutationConflictResponse> => response.status.code === 202;\n\nclass CommandExecutor {\n  constructor(\n    private _serviceUrl: string,\n    private _services: CommandExecutorServices,\n    private _productId?: string\n  ) {}\n\n  private _preProcessUrl(url: string): string {\n    const trimmedUrl = trimSlashes(url);\n\n    if (/^https?:\\/\\//.test(url)) {\n      return trimmedUrl;\n    }\n\n    return `${trimSlashes(this._serviceUrl)}/${trimmedUrl}`;\n  }\n\n  private async _makeRequest<REQ = void, RESP = void>(\n    method: \"get\" | \"post\" | \"delete\",\n    url: string,\n    requestBody?: REQ,\n    headers?: Record<string, string>\n  ): Promise<Result<RESP>> {\n    const preProcessedUrl = this._preProcessUrl(url);\n    const finalHeaders = {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      ...(headers || {}),\n    };\n    let response: Result<RESP>;\n\n    switch (method) {\n      case \"get\":\n        let getUrl = preProcessedUrl;\n\n        if (requestBody) {\n          getUrl +=\n            \"?\" +\n            Object.entries(requestBody)\n              .map((entry) => entry.map(encodeURIComponent).join(\"=\"))\n              .join(\"&\");\n        }\n\n        response = await this._services.transport.get(\n          getUrl,\n          finalHeaders,\n          this._productId\n        );\n        break;\n      case \"post\":\n        response = await this._services.transport.post(\n          preProcessedUrl,\n          finalHeaders,\n          JSON.stringify(requestBody),\n          this._productId\n        );\n        break;\n      case \"delete\":\n        response = await this._services.transport.delete(\n          preProcessedUrl,\n          finalHeaders,\n          {},\n          this._productId\n        );\n        break;\n    }\n\n    if (response.status.code < 200 || response.status.code >= 300) {\n      throw new Error(\n        `Request responded with a non-success code ${response.status.code}`\n      );\n    }\n\n    return response;\n  }\n\n  public async fetchResource<REQ = void, RESP = void>(\n    url: string,\n    requestBody?: REQ\n  ): Promise<RESP> {\n    const maxAttemptsCount = 6;\n    try {\n      const result = await new AsyncRetrier({\n        min: 50,\n        max: 1600,\n        maxAttemptsCount,\n      }).run(() => this._makeRequest<REQ, RESP>(\"get\", url, requestBody));\n      return result.body;\n    } catch {\n      throw new Error(`Fetch resource from \"${url}\" failed.`);\n    }\n  }\n\n  public async mutateResource<REQ = void, RESP = void>(\n    method: \"post\" | \"delete\",\n    url: string,\n    requestBody?: REQ\n  ): Promise<RESP> {\n    const result = await this._makeRequest<REQ, RESP>(\n      method,\n      url,\n      requestBody,\n      {\n        \"X-Twilio-Mutation-Id\": uuidv4(),\n      }\n    );\n\n    if (isMutationConflictResponse(result)) {\n      return await this.fetchResource<undefined, RESP>(\n        result.body.resource_url\n      );\n    }\n\n    return result.body;\n  }\n}\n\nexport { CommandExecutor };\n"],"names":["AsyncRetrier","uuidv4"],"mappings":"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"}